@Library('corda-shared-build-pipeline-steps')
import static com.r3.build.BuildControl.killAllExistingBuildsForJob

killAllExistingBuildsForJob(env.JOB_NAME, env.BUILD_NUMBER.toInteger())

pipeline {
  agent {
    dockerfile {
      label 'k8s'
      additionalBuildArgs "--build-arg USER=tester --build-arg UID=\$(id -u) --build-arg GID=\$(id -g)"
      filename '.ci/dev/Dockerfile'
    }
  }

  options {
      timestamps()
      timeout(time: 1, unit: 'HOURS')
  }

  stages {
    stage('Compile') {
        steps {
            sh "./gradlew --no-daemon -Pcompilation.allWarningsAsErrors=true -Ptests.failFast=false -Ptests.ignoreFailures=true clean assemble"
        }
    }
    stage('Test') {
        steps {
            sh "./gradlew --no-daemon -Pcompilation.allWarningsAsErrors=true -Ptests.failFast=false -Ptests.ignoreFailures=true testClasses test"
        }
    }
    // Keep build and test stages as they only take a few minutes. Also we don't want to publish with failing tests.
    stage('Publish') {
        steps {
            sh "./gradlew --no-daemon -Pcompilation.allWarningsAsErrors=true -Ptests.failFast=false -Ptests.ignoreFailures=true artifactoryPublish"
        }
    }
  }

  post {
    always {
        junit '**/build/test-results/**/*.xml'
    }
    cleanup {
      deleteDir()
    }
  }
}
